---
title: "Exploración de la heterogeneidad"
author:
  - name: Tamara Ricardo
    orcid: 0000-0002-0921-2611
bibliography: "../references.bib"
---

```{r}
#| echo: false 
source("../setup.R")
```

## Introducción

En la clase anterior abordamos el ajuste de modelos de efectos fijos y aleatorios, la representación gráfica de los resultados mediante *forest plots* y la estimación de la heterogeneidad estadística. En esta clase, nos enfocaremos en distintas estrategias para controlar la heterogeneidad observada y evaluar la robustez de los modelos ajustados.

## Análisis de moderadores

El análisis de moderadores permite explorar fuentes de heterogeneidad entre los estudios incluidos en un meta-análisis. Se asume que los estudios no provienen de una misma población base sino de distintas subpoblaciones o subgrupos, cada una con su propio efecto verdadero.

Puede realizarse incorporando como moderador una variable categórica (**análisis de subgrupos**) o una variable numérica (**metarregresión**).

Este enfoque contribuye a:

-   Evaluar hipótesis sobre variaciones en la magnitud del estimador de efecto entre estudios.

-   Interpretar diferencias observadas en los resultados.

Para evitar sesgos de selección, es fundamental definir las variables moderadoras **durante la extracción de datos** en la revisión sistemática.

### Análisis de sugbgrupos

En el análisis de subgrupos se asume que los estudios no provienen de una población única, sino de distintos subgrupos poblacionales, cada uno con su propio efecto verdadero.

El análisis consta de dos etapas:

-   Estimación del efecto **dentro de cada subgrupo.**

-   Prueba estadística para evaluar diferencias **entre subgrupos**.

Para evaluar el efecto de una variable categórica con `meta`, ajustamos el modelo de meta-análisis incluyendo el argumento `subgroup = var`, donde `var` es el nombre de una variable del dataset.

En el siguiente ejemplo, realizaremos un análisis de subgrupos con el dataset "`dat.crisafulli2020`" considerando el país de realización del estudio (`country`) como posible fuente de heterogeneidad.

Cargamos los paquetes necesarios:

```{r}
# Cargar paquetes
pacman::p_load(
  janitor,
  meta,
  tidyverse
)
```

Cargamos los datos y exploramos su estructura:

```{r}
# Cargar datos
datos <- dat.crisafulli2020

# Inspeccionar estructura de los datos
glimpse(datos)
```

Usaremos la función `tabyl()` del paquete `janitor` [@janitor] para generar una tabla de frecuencias de los niveles de la variable `country`:

```{r}
tabyl(datos, country) |>   # Generar tabla de frecuencia
  arrange(-n) |>           # Ordenar por frecuencia
  adorn_pct_formatting()   # Proporciones a porcentajes
```

Como la mayoría de los estudios provienen de Italia y la frecuencia en otros países es baja, creamos una variable dicotómica `pais_cat`:

```{r}
datos <- datos |> 
  mutate(pais_cat = if_else(
    country  == "IT", # Condición a testear
    "Italia",         # Valor si la condición se cumple
    "Otro/s" ))       # Valor si la condición no se cumple
```

Ajustamos el modelo de meta-análisis para proporciones, incorporando `pais_cat` como moderador:

```{r}
mod_sub <- metaprop(
  event = cases,          # Casos observados
  n = total,              # Tamaño de la muestra
  studlab = study,        # Identificador del estudio
  data = datos,           # Conjunto de datos
  sm = "PLOGIT",          # Transformación logit
  common = FALSE,         # Omitir modelo de efectos fijos
  random = TRUE,          # Modelo de efectos aleatorios
  pscale = 100000,        # Escala a casos/100 000 habitantes
  subgroup = pais_cat     # Moderador categórico
)
```

Veamos la salida del modelo:

```{r}
mod_sub
```

El análisis de subgrupos ajusta un modelo de meta-análisis para cada nivel de la variable categórica, con sus estimadores de efecto ($95\%~IC$) e indicadores de heterogeneidad, además del estimador global ($95\%~IC$) y sus indicadores de heterogeneidad. En base a esto, la salida del modelo muestra dos nuevos paneles:

-   `Results for subgroups (random effects model)`: muestra los resultados para cada categoría del moderador, incluyendo:

    -   Identificador de las categorías del moderador.

    -   `k`: número de estudios en la categoría/subgrupo.

    -   `events`: prevalencia en la categoría/subgrupo.

    -   `95%-CI`: intervalo de confianza al 95% para la prevalencia en la categoría/subgrupo.

    -   `tau^2`: varianza dentro de la categoría/subgrupo.

    -   `tau`: desvío estándar en la categoría/subgrupo.

    -   `Q`: estadístico Q de Cochran para la categoría/subgrupo.

    -   `I^2`: porcentaje de heterogeneidad observado en la categoría/subgrupo.

-   `Test for subgroup differences (random effects model)`: prueba de hipótesis para detectar diferencias significativas entre subgrupos.

En este ejemplo, observamos una prevalencia significativamente mayor en Italia en comparación con otros países $(p = 0,013)$. Podemos acceder al p-valor de la prueba de moderadores con el siguiente código:

```{r}
mod_sub$pval.Q.b.random
```

Podemos visualizar los resultados del análisis de moderadores incorporando el argumento `layout = "subgroup"` a la función `forest()`:

```{r}
#| fig-height: 4
#| fig-width: 9
forest(
  mod_sub,
  layout = "subgroup",         # <1>
  sort.subgroup = TRUE,        # <2>
  calcwidth.subgroup = TRUE,   # <3>
  calcwidth.tests = TRUE,      # <4>
  print.subgroup.name = FALSE, # <5>
)
```

1.  `layout = "subgroup"`: muestra los estimadores de efecto para cada subgrupo y el estimador global, omitiendo los resultados de los estudios individuales.

2.  `sort.subgroup`: ordena alfabéticamente las categorías de la variable moderadora.

3.  `calcwidth.subgroup`: ajusta el ancho del forest plot para que se muestren correctamente las etiquetas de las categorías/subgrupos.

4.  `calcwidth.tests`: ajusta el ancho del forest plot para que se muestren correctamente las etiquetas del test de hipótesis de diferencias en las categorías/subgrupos.

5.  `print.subgroup.name`: muestra la etiqueta de la variable moderadora delante de cada categoría (`TRUE`, por defecto) o lo oculta (`FALSE`).

6.  `label.test.subgroup.random`: etiqueta para los resultados del test para diferencias entre subgrupos en el modelo de efectos aleatorios.

Cuando graficamos un análisis de subgrupos, el argumento `col.diamond` modifica el color del estimador global y de los estimadores por subgrupo. El argumento `col.square` **no** tiene efecto en este caso.

El análisis de subgrupos puede interpretarse como un enfoque intermedio entre el modelo de efectos fijos y el de efectos aleatorios. Se asume que existe **heterogeneidad entre los subgrupos**, y que cada nivel de la variable moderadora posee su propio efecto verdadero. Sin embargo, los subgrupos analizados (por ejemplo, sexo biológico, grupo etario, país de origen, tipo de prueba diagnóstica) se consideran **categorías fijas**, definidas *a priori*.

Entre sus principales **limitaciones** se encuentran:

-   Si la heterogeneidad es elevada, los **intervalos de confianza pueden ser amplios y superponerse**, incluso cuando existen diferencias estadísticamente significativas entre subgrupos.

-   El tamaño muestral por subgrupo es menor que para el estimador global, lo que reduce la **potencia estadística**.

-   La ausencia de significación estadística no implica equivalencia entre los grupos, ya que el análisis **no permite evaluar relaciones causales**.

### Metarregresión

La metarregresión intenta predecir el estimador de efecto global en base a una o más variables independientes. Por lo general, se usa para evaluar el efecto de una variable continua (por ejemplo, el año de publicación) sobre la magnitud del efecto global. Sin embargo, también pueden incluirse moderadores categóricos, obteniendo resultados idénticos a los del análisis de subgrupos.

Para ilustrar el uso de la metarregresión, vamos a reajustar el modelo anterior (`mod_sub`) eliminando el moderador categórico:

```{r}
#| eval: false
mod <- metaprop(
  event = cases,          
  n = total,              
  studlab = study,        
  data = datos,           
  sm = "PLOGIT",         
  common = FALSE,       
  random = TRUE,
  pscale = 100000,
 )
```

O bien usando la función `update()`:

```{r}
mod <- update(mod_sub, subgroup = NULL)
```

Ajustaremos la metarregresión con la función `metareg()`, incluyendo el año de publicación (`pubyear`) como moderador en el argumento `formula`:

```{r}
mod_year <- metareg(mod, 
                    formula = ~ pubyear,
                    intercept = TRUE)
```

La salida del modelo muestra lo siguiente:

```{r}
summary(mod_year)
```

-   `Mixed-Effects Model`: reporta los cambios en heterogeneidad al añadir el moderador continuo y (según el estimador) la bondad de ajuste ($R^2$) del modelo.

-   `Model results` presenta los coeficientes del modelo para el intercepto y el moderador, con su significancia estadística y $95\%~IC$.

En nuestro ejemplo, los resultados muestran un efecto estadísticamente significativo del año de publicación sobre la prevalencia del evento $(p = 0,008)$.

::: {.callout-warning appearance="minimal"}
## Importante

Cuando se trabaja con **moderadores continuos**, estamos ajustando una **recta de regresión** que busca minimizar la diferencia entre el estimador observado y el predicho.

-   El **intercepto** corresponde al valor del efecto cuando el moderador es cero (lo cual no tiene interpretación biológica).

-   La **pendiente** representa el efecto del moderador sobre el estimador de efecto.

Si se utilizan **moderadores categóricos**, cada nivel de la variable representa un subgrupo con su propio estimador de efecto:

-   Se debe **omitir el intercepto** para obtener directamente el estimador de efecto de cada categoría.

-   Este enfoque es equivalente a un ANOVA, donde se comparan medias entre grupos sin necesidad de definir una categoría de referencia.

-   Los resultados se presentan en escala transformada (por ejemplo log-OR), por lo que se debe aplicar la transformación inversa para interpretarlos.
:::

#### *Bubble plots*

Los resultados de la metarregresión con predictores numéricos se visualizan usando *bubble plots.* Estos gráficos representan en el eje $X$ el valor del moderador continuo y en el eje $Y$ el efecto estimado para cada estudio. Cada burbuja representa un estudio individual, y su tamaño es proporcional al peso del estudio (generalmente inversamente proporcional a la varianza). Además, el gráfico incluye una línea de regresión con su intervalo de confianza del 95%, permitiendo visualizar la tendencia general.

La función `bubble()` genera este gráfico de forma rápida:

```{r}
bubble(
  mod_year,              # <1>
  cex = "common",        # <2>
  col.line = "magenta"   # <3>
)
```

1.  Modelo de meta-análisis.

2.  Tamaño de las burbujas.

3.  Color para la línea de regresión.

Para ajustar el tamaño de las burbujas según el peso de cada estudio debemos definir una función. Por ejemplo `rescale()` del paquete `plotrix`:

```{r}
# Peso de cada estudio
wt <- plotrix::rescale(
    x = 1 / mod_year$vi,
    newrange = c(0.5, 3))
```

Para ajustar el tamaño de las burbujas según el peso de cada estudio, se puede modificar el argumento `cex` utilizando la función anterior:

```{r}
bubble(
  mod_year,
  cex = wt,  # Ajusta la escala de los símbolos
  col.line = "magenta"
)
```

O de forma más artesanal, calculamos el tamaño de las burbujas con el inverso de la varianza del modelo:

```{r}
bubble(
  mod_year,
  cex = (1/mod_year$vi) * 0.01,
  col.line = "magenta", 
  studlab = TRUE         # Añadir etiqueta autor principal
)
```

#### Metarregresión múltiple

Los modelos de metarregresión permiten evaluar el efecto de dos o más variables independientes, que pueden ser continuas, categóricas o una combinación de ambas.

Al igual que en los modelos de regresión convencional, se pueden especificar efectos **aditivos** (independientes) o **multiplicativos** (interacción).

```{r}
## Modelo aditivo
reg1 <- metareg(mod, formula = ~ pubyear + pais_cat)

summary(reg1)

## Modelo multiplicativo
reg2 <- metareg(mod, formula = ~ pubyear * pais_cat)

summary(reg2)
```

A menos que exista una hipótesis específica de interacción, se recomienda utilizar un modelo aditivo. Los modelos con interacción aumentan la **complejidad**, el riesgo de **sobreajuste**, la posibilidad de **colinealidad** entre variables moderadoras y los **problemas de convergencia**, especialmente cuando el número de estudios es reducido o hay muchos niveles en las variables categóricas.

## Sesgo de publicación

El sesgo de publicación (*publication bias*) se refiere a la tendencia de publicar con mayor frecuencia estudios con resultados positivos, estadísticamente significativos o con grandes tamaños del efecto. Esto puede distorsionar la síntesis de la evidencia en un meta-análisis, produciendo una sobreestimación del efecto global. Por ello, es esencial evaluar y ajustar el sesgo de publicación para garantizar que los resultados sean lo más precisos y representativos posible.

### ***Funnel plots***

El *funnel plot* o gráfico de embudo representa en el eje $Y$ el tamaño muestral o la precisión de los estudios, y en el eje $X$ el estimador de efecto para cada estudio. En ausencia de sesgo de publicación, se espera una distribución simétrica que forme un patrón similar a un embudo; de lo contrario, se observa asimetría.

Para generar un *funnel plot*, se utiliza la función `funnel()`:

```{r}
funnel(mod)
```

### **Test de Egger**

El test de Egger evalúa la simetría del funnel plot mediante una regresión lineal entre el estimador de efecto y su error estándar. Un *p*-valor menor a 0,05 sugiere la presencia de sesgo de publicación.

Este test se implementa con la función `metabias()`:

```{r}
metabias(
  mod,                  # modelo de meta-análisis
  method.bias = "Egger" # aplica test de Egger (opción por defecto)
  )
```

### **Test de Begg**

El test de Begg utiliza la correlación de rangos para evaluar la relación entre el tamaño del efecto y el error estándar. Un *p*-valor menor que 0,05 indica la presencia de sesgo de publicación.

Se implementa añadiendo el argumento `method.bias = "Begg"` a la función `metabias()`:

```{r}
metabias(
  mod,                  # modelo de meta-análisis
  method.bias = "Begg"  # aplica test de Begg
  )
```

### ***Trim-and-fill***

El método *trim-and-fill* estima el número de estudios faltantes debido al sesgo de publicación y ajusta la media global en consecuencia, incorporando estudios hipotéticos. Esto ayuda a corregir la estimación del efecto global.

Se utiliza la función `trimfill()`:

```{r}
trimfill(mod)
```

Generalmente, se recomienda utilizar dos o más métodos para evaluar el sesgo de publicación y obtener una visión más completa de su impacto en el meta-análisis. En el ejemplo anterior, no hubiera sido necesario realizar el *trim-and-fill* ya que el funnel plot tiene una forma bastante simétrica y el *p*-valor de los test de Egger y Begg fue menor a 0,05.

## Modelos multinivel

Desde una perspectiva estadística, todos los modelos de meta-análisis pueden considerarse multinivel, ya que contemplan múltiples fuentes de variación. Por ejemplo, los modelos de efectos aleatorios incluyen al menos dos niveles: la variabilidad dentro de los estudios (**error aleatorio**) y la variación sistemática no explicada por los moderadores (**heterogeneidad**).

Esta estructura asume que los individuos están anidados dentro de cada estudio, lo que configura una jerarquía de los datos análoga a un modelo lineal con intercepto aleatorio, también conocido como *modelo de efectos mixtos*.

::: {.callout-warning appearance="simple"}
**Importante**

En estadística convencional, los modelos lineales generalizados con efectos mixtos —o modelos multinivel— incorporan **efectos fijos** (coeficientes comunes a todos los grupos) y **efectos aleatorios** (específicos por grupo o clúster). Los efectos aleatorios modelan la dependencia estructural entre observaciones, pero no afectan directamente la inferencia sobre los efectos fijos.
:::

Aunque ambos enfoques son técnicamente modelos mixtos, en meta-análisis el término suele referirse a modelos en los que se incluyen categorías fijas para los moderadores y un componente aleatorio para modelar la heterogeneidad entre estudios. Por esta razón, a la metarregresión se la denomina también modelo de efectos fijos plurales (*fixed effects –plural– model*) o modelo de efectos mixtos.

Ahora bien, en ciertas situaciones, esta representación puede no ser suficiente para capturar la estructura real de los datos. Por ejemplo, un mismo estudio puede reportar **múltiples estimadores de efecto** correspondientes a diferentes subgrupos, momentos de seguimiento, sitios de estudio, tratamientos o desenlaces. En estos casos, asumir que las estimaciones de un mismo estudio son independientes puede conducir a inferencias sesgadas y pérdida de precisión.

Los modelos de tres niveles abordan esta limitación incorporando una capa adicional de variabilidad para modelar la **heterogeneidad intraestudio**, es decir, la variación entre estimadores reportados por un mismo estudio. Esto permite incorporar todas las estimaciones disponibles sin necesidad de promediarlas ni seleccionar una por estudio, mejorando el ajuste del modelo.

```{r}
#| echo: false
# Limpiar environment
rm(list = ls())
```

### Implementación en R

Si bien el paquete `metafor` es el más apropiado para trabajar con modelos multinivel y/o metarregresiones múltiples, su uso requiere un manejo más avanzado de R.

En sus actualizaciones más recientes, el paquete `meta` permite ajustar modelos multinivel sencillos incorporando el argumento `cluster`.

En este ejemplo, trabajaremos con el conjunto de datos `dat.bornmann2007`, que contiene los resultados de **21 estudios** sobre diferencias de género en la adjudicación de becas y subsidios para investigación:

```{r}
# Cargar datos
datos <- dat.bornmann2007

# Explorar datos
glimpse(datos)
```

Las variables de interés son:

-   `waward`: número de mujeres que fueron seleccionadas.

-   `wtotal`: número de mujeres que se postularon.

-   `maward`: número de varones que fueron seleccionados.

-   `mtotal`: número de varones que se postularon.

-   `type`: tipo de subsidio otorgado (`"Fellowship"`- beca de posgrado- o `"Grant"` - fondos para investigación-)-

El conjunto de datos contiene **66 observaciones**, lo que sugiere que varios estudios reportan más de un estimador de efecto. Para confirmarlo, generamos una tabla de frecuencias por estudio:

```{r}
tabyl(datos, study) |> 
  arrange(-n)
```

Como se observa, cada estudio aporta entre 1 y 9 estimaciones. Ajustaremos un modelo de efectos aleatorios para el *odds-ratio* de ser seleccionada siendo mujer:

```{r}
# Ajustar modelo
mod <- metabin(event.e = waward,  
               n.e = wtotal,
               event.c = maward,
               n.c = mtotal,
               data = datos,
               sm = "OR",
               common = FALSE,    
               subgroup = type,
               studlab = study)   
```

Veamos los resultados en un *forest plot*:

```{r}
forest(mod, layout = "subgroup")
```

El efecto global nos muestra que las mujeres tienen probabilidades significativamente menores de ser seleccionadas respecto de los varones (OR: 0,93, $95\%~IC$: 0,88-0,99) y que esta tendencia global se mantiene cuando se trata de becas de posgrado, pero se vuelve no significativa para el pedido de subsidios de investigación. Sin embargo, este modelo asume que las 66 observaciones son independientes entre sí, por lo que podría estar sobreestimando o subestimando los coeficientes y su significancia.

Antes de continuar con el ajuste del modelo de tres niveles, generaremos una nueva variable que asigne un identificador único a cada observación en base a su número de fila:

```{r}
datos <- datos |> 
  # Crear identificador único
  rowid_to_column(var = "id")
```

Reajustamos el modelo incorporando `study` como variable de agrupamiento (`cluster`) y el número de fila (`id`) como identificador de estudio:

```{r}
#| code-line-numbers: "10-11"
mod_multi <- metabin(
  event.e = waward,
  n.e = wtotal,
  event.c = maward,
  n.c = mtotal,
  data = datos, 
  sm = "OR",         
  common = FALSE,
  subgroup = type,
  studlab = id,
  cluster = study
) 
```

*Forest plot*:

```{r}
forest(mod_multi, layout = "subgroup")
```

Veamos la salida del modelo:

```{r}
mod_multi
```

Podemos observar que tanto los coeficientes para el estimador global como dentro de los subgrupos cambian ligeramente respecto al modelo de efectos aleatorios. Adicionamente, la heterogeneidad (tau-cuadrado) ahora aparece dividida en dos componentes:

-   `tau^2.1`: heterogeneidad entre estudios o clústeres.

-   `tau^2.2`: heterogeneidad intra estudio/clúster.

Esta descomposición permite una estimación más precisa de la variabilidad real y evita subestimar o sobreestimar la incertidumbre asociada al efecto global. Actualmente el paquete `meta` no nos permite obtener estimaciones de $I^2$ intraclúster ($I^2_{nivel2}$) e interclúster ($I^2_{nivel3}$) o calcular sesgo de publicación. En la próxima sección, veremos herramientas adicionales para obtener estas estimaciones a partir de modelos ajustados con `metafor`.

### Análisis de sensibilidad

El análisis de sensibilidad permite evaluar la **robustez** de los resultados de un meta-análisis. Una estrategia común consiste en **reajustar el modelo** excluyendo estudios con menor tamaño muestral o de menor calidad, y luego comparar el estimador de efecto y su intervalo de confianza del 95% con los del modelo original. Otra alternativa es el análisis ***leave-one-out***, que implica eliminar un estudio a la vez para observar cómo varía el estimador global, en `meta` se implementa usando la función `metainf()` y solo admite modelos de efectos fijos o de efectos aleatorios.

::: {.callout-note appearance="simple"}
Hasta aquí hemos cubierto los aspectos básicos para evaluar fuentes de heterogeneidad en modelos de meta-análisis. Quienes tengan interés en profundizar en las medidas de heterogeneidad y su aplicación, recomendamos consultar el artículo de [@bown2010] y los capítulos [7](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/subgroup.html), [8](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/metareg.html) y [9](https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/pub-bias.html) de @Harrer2021.

La próxima sección es optativa y orientada a quienes tengan mayor manejo de R, se orientará al uso de herramientas adicionales para la visualización avanzada de resultados y análisis de metarregresiones múltiples y modelos multinivel.
:::
